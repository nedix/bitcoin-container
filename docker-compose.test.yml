name: ${COMPOSE_PROJECT_NAME}-test

services:
  test:
    build:
      context: ${PWD}
      dockerfile: Dockerfile
      target: test
    networks:
      default:
      internal:
    depends_on:
      bitcoin-external:
        condition: service_started
      bitcoin-internal:
        condition: service_started
    deploy:
      replicas:
        0

  bitcoin-external:
    extends:
      file: docker-compose.yml
      service: bitcoin-external

  bitcoin-internal:
    extends:
      file: docker-compose.yml
      service: bitcoin-internal

  s3-nfs:
    extends:
      file: docker-compose.yml
      service: s3-nfs
    depends_on:
      minio:
        condition: service_healthy

  minio:
    image: minio/minio:RELEASE.2023-12-23T07-19-11Z
    entrypoint: sh
    command: -c 'minio server --console-address ":8900" /data/minio'
    environment:
      MINIO_BUCKET: ${S3_BUCKET}
      MINIO_ROOT_USER: ${S3_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_ACCESS_KEY}
    networks:
      default:
      internal:
    ports:
      - ${FORWARD_MINIO_CONSOLE_PORT}:8900
    volumes:
      - minio:/data/minio
    healthcheck:
      test: [CMD, mc, ready, local]
      retries: 3
      timeout: 5s
    restart: unless-stopped

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME}
  internal:
    name: ${COMPOSE_PROJECT_NAME}-internal
    internal: true

volumes:
  bitcoin:
  s3-nfs:
    driver_opts:
      type: nfs
      o: 'vers=4,addr=localhost,port=${FORWARD_S3_NFS_PORT},rw'
      device: ':/'
